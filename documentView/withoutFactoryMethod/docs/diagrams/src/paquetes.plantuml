@startuml usantatecla.mastermind
class usantatecla.mastermind.ConsoleMastermind{
- game: Game
- consoleView: ConsoleView
- ConsoleMastermind()
+ {static} main(String[]): void
- play(): void
}

class usantatecla.mastermind.GraphicsMastermind{
- game: Game
- graphicsView: GraphicsView
- GraphicsMastermind()
+ {static} main(String[]): void
- play(): void
}

class ConsoleView as "usantatecla.mastermind.\nviews.console.\nConsoleView"{}
class GraphicsView as "usantatecla.mastermind.\nviews.graphics.\nGraphicsView"{}
class Game as "usantatecla.mastermind.\nmodels.\nGame"{}
usantatecla.mastermind.ConsoleMastermind *-down-> ConsoleView
usantatecla.mastermind.ConsoleMastermind *-down-> Game
usantatecla.mastermind.GraphicsMastermind *-down-> GraphicsView
usantatecla.mastermind.GraphicsMastermind *-down-> Game

@enduml

@startuml usantatecla.mastermind.views
class Error as "usantatecla.mastermind.models.\nError"{}
class Color as "usantatecla.mastermind.models.\nColor"{}
class Game as "usantatecla.mastermind.models.\nGame"{}

abstract class usantatecla.mastermind.views.ColorView{
    + {static} INITIALS: char []
    # ColorView()
    # ColorView(Color)
    + allInitials(): String
    # {abstract} resultInitials(int): String
    + {static} getInstance(char): Color
}
usantatecla.mastermind.views.ColorView *-down-> Color

abstract class usantatecla.mastermind.views.ErrorView{
    + MESSAGES: String []
    # ErrorView()
    + ErrorView(Error error)
    # {abstract} colorInitials(): String
}
usantatecla.mastermind.views.ErrorView *-down-> Error

enum usantatecla.mastermind.views.MessageView{
    + ATTEMPTS
    + SECRET
    + RESUME
    + RESULT
    + PROPOSED_COMBINATION
    + TITLE
    + WINNER
    + LOOSER
    - message: String
    - MessageView(String)
    + getMessage(): String
}

abstract class usantatecla.mastermind.views.View {
    + View(Game)
    + interact()
    # {abstract} start(): void
    # {abstract} propose(): boolean
    # {abstract} isNewGame(): boolean
}
usantatecla.mastermind.views.View *-down-> Game
@enduml

@startuml usantatecla.mastermind.views.console
class Game as "usantatecla.\nmastermind.models.\nGame"
class Error as "usantatecla.\nmastermind.models.\nError"
class Result as "usantatecla.\nmastermind.models.\nResult"
enum Color as "usantatecla.\nmastermind.models.\nColor"
abstract class Combination as "usantatecla.\nmastermind.models.\nCombination"
class ProposedCombination as "usantatecla.\nmastermind.models.\nProposedCombination"
class SecretCombination as "usantatecla.\nmastermind.models.\nSecretCombination"
abstract class View as "usantatecla.\nmastermind.views.\nView"
abstract class ColorView as "usantatecla.\nmastermind.views.\nColorView"
abstract class ErrorView as "usantatecla.\nmastermind.views.\nErrorView"
enum MessageView as "usantatecla.\nmastermind.views.\nMessageView"
abstract class WithConsoleView as "usantatecla.utils.\nWithConsoleView"
class Console as "usantatecla.utils.\nConsole"
class YesNoDialog as "usantatecla.utils.\nYesNoDialog"
enum ColorCode as "usantatecla.utils.\nColorCode"

class usantatecla.mastermind.views.console.ConsoleView {
    + ConsoleView(Game)
    # start()
    # propose() : boolean
    # isNewGame() : boolean
}
usantatecla.mastermind.views.console.ConsoleView -up-|> View
usantatecla.mastermind.views.console.ConsoleView *-down-> usantatecla.mastermind.views.console.StartView
usantatecla.mastermind.views.console.ConsoleView *-down-> usantatecla.mastermind.views.console.ProposalView
usantatecla.mastermind.views.console.ConsoleView *-down-> usantatecla.mastermind.views.console.ResumeView
usantatecla.mastermind.views.console.ConsoleView --> Game

class usantatecla.mastermind.views.console.ResumeView {
    ~ ResumeView(Game)
    ~ interact() : boolean
}
usantatecla.mastermind.views.console.ResumeView *-down-> Game
usantatecla.mastermind.views.console.ResumeView ..> YesNoDialog
usantatecla.mastermind.views.console.ResumeView ..> MessageView

class usantatecla.mastermind.views.console.StartView {
    ~ interact()
}
usantatecla.mastermind.views.console.StartView -up-|> WithConsoleView
usantatecla.mastermind.views.console.StartView ..> MessageView
usantatecla.mastermind.views.console.StartView ..> usantatecla.mastermind.views.console.SecretCombinationView

class usantatecla.mastermind.views.console.ProposalView {
    ~ ProposalView(Game)
    ~ interact() : boolean

}
usantatecla.mastermind.views.console.ProposalView -up-|> WithConsoleView
usantatecla.mastermind.views.console.ProposalView *-down-> Game
usantatecla.mastermind.views.console.ProposalView *-down-> usantatecla.mastermind.views.console.SecretCombinationView
usantatecla.mastermind.views.console.ProposalView ..> ProposedCombination
usantatecla.mastermind.views.console.ProposalView ..> usantatecla.mastermind.views.console.AttemptsView
usantatecla.mastermind.views.console.ProposalView ..> usantatecla.mastermind.views.console.ResultView
usantatecla.mastermind.views.console.ProposalView ..> usantatecla.mastermind.views.console.ProposedCombinationView
usantatecla.mastermind.views.console.ProposalView ..> MessageView

class usantatecla.mastermind.views.console.ProposedCombinationView {
    ~ ProposedCombinationView(ProposedCombination)
    ~ write()
    ~ read()
}
usantatecla.mastermind.views.console.ProposedCombinationView -up-|> WithConsoleView
usantatecla.mastermind.views.console.ProposedCombinationView *-down-> ProposedCombination
usantatecla.mastermind.views.console.ProposedCombinationView ..> usantatecla.mastermind.views.console.ErrorView
usantatecla.mastermind.views.console.ProposedCombinationView ..> usantatecla.mastermind.views.console.ColorView
usantatecla.mastermind.views.console.ProposedCombinationView ..> Color
usantatecla.mastermind.views.console.ProposedCombinationView ..> Error
usantatecla.mastermind.views.console.ProposedCombinationView ..> Combination
usantatecla.mastermind.views.console.ProposedCombinationView ..> MessageView

class usantatecla.mastermind.views.console.SecretCombinationView {
    ~ SecretCombinationView()
    ~ writeln()
}
usantatecla.mastermind.views.console.SecretCombinationView -up-|> WithConsoleView
usantatecla.mastermind.views.console.SecretCombinationView ..> SecretCombination
usantatecla.mastermind.views.console.SecretCombinationView ..> MessageView

class usantatecla.mastermind.views.console.ResultView {
    ~ ResultView(Result)
    ~ writeln()
}
usantatecla.mastermind.views.console.ResultView -up-|> WithConsoleView
usantatecla.mastermind.views.console.ResultView *-down-> Result
usantatecla.mastermind.views.console.ResultView ..> MessageView

class usantatecla.mastermind.views.console.AttemptsView {
    ~ AttemptsView(Game)
    ~ writeln()
}
usantatecla.mastermind.views.console.AttemptsView -up-|> WithConsoleView
usantatecla.mastermind.views.console.AttemptsView *-down-> Game

class usantatecla.mastermind.views.console.ColorView {
    ~ ColorView()
    ~ ColorView(Color)
    # resultInitials(int) : String
    ~ write()
}
usantatecla.mastermind.views.console.ColorView -up-|> ColorView
usantatecla.mastermind.views.console.ColorView ..> ColorCode
usantatecla.mastermind.views.console.ColorView ..> Console
usantatecla.mastermind.views.console.ColorView ..> Color

class usantatecla.mastermind.views.console.ErrorView {
    ~ ErrorView()
    ~ ErrorView(Error)
    ~ writeln()
    # colorInitials() : String
}
usantatecla.mastermind.views.console.ErrorView -up-|> ErrorView
usantatecla.mastermind.views.console.ErrorView ..> Error
usantatecla.mastermind.views.console.ErrorView ..> Console
usantatecla.mastermind.views.console.ErrorView ..> usantatecla.mastermind.views.console.ColorView

@enduml

@startuml usantatecla.mastermind.views.graphics

@enduml

@startuml usantatecla.mastermind.models
abstract class usantatecla.mastermind.models.Combination {
- {static} WIDTH: int
# Combination()
+ {static} getWidth(): int
}
usantatecla.mastermind.models.Combination *-down-> "*" usantatecla.mastermind.models.Color

class usantatecla.mastermind.models.Game {
- {static} MAX_LONG: int
- attempts: int
+ Game()
+ clear()
+ addProposeCombination(ProposedCombination)
+ isLooser(): boolean
+ isWinner(): boolean
+ getAttempts(): int
+ getProposedCombination(int): ProposedCombination
+ getResult(int): Result
}
usantatecla.mastermind.models.Game *-down-> usantatecla.mastermind.models.SecretCombination
usantatecla.mastermind.models.Game *-down-> "0..*" usantatecla.mastermind.models.Result
usantatecla.mastermind.models.Game *-down-> "0..*" usantatecla.mastermind.models.ProposedCombination

class usantatecla.mastermind.models.ProposedCombination {
+ ProposedCombination()
~ contains(Color, int): boolean
~ contains(Color): boolean
+ getColors(): List<Color>
}
usantatecla.mastermind.models.Combination <|-down- usantatecla.mastermind.models.ProposedCombination
usantatecla.mastermind.models.ProposedCombination ..> usantatecla.mastermind.models.Color

class usantatecla.mastermind.models.SecretCombination {
~ SecretCombination()
~ getResult(ProposedCombination): Result
}
usantatecla.mastermind.models.Combination <|-down- usantatecla.mastermind.models.SecretCombination
usantatecla.mastermind.models.SecretCombination ..> usantatecla.mastermind.models.Result
usantatecla.mastermind.models.SecretCombination ..> usantatecla.mastermind.models.ProposedCombination
usantatecla.mastermind.models.SecretCombination ..> usantatecla.mastermind.models.Color

class usantatecla.mastermind.models.Result {
- blacks: int
- whites: int
~ Result(int, int)
~ isWinner(): boolean
+ getBlacks(): int
+ getWhites(): int
}

usantatecla.mastermind.models.Result ..> usantatecla.mastermind.models.Combination

enum usantatecla.mastermind.models.Color {
+ RED
+ BLUE
+ YELLOW
+ GREEN
+ ORANGE
+ PURPLE
~ {static} length(): int
}

enum usantatecla.mastermind.models.Error {
+ DUPLICATED
+ WRONG_CHARACTERS
+ WRONG_LENGTH
}

@enduml

@startuml usantatecla.utils
class BufferedReader as "java.io.BufferedReader"{}

enum usantatecla.utils.ColorCode{
+ RED
+ BLUE
+ YELLOW
+ GREEN
+ ORANGE
+ PURPLE
+ RESET_COLOR
- color: String
~ ColorCode(String)
+ getColor(): String
+ {static} getColorByIndex(int): String
}

class usantatecla.utils.Console{
- {static} console: Console
- bufferedReader: BufferedReader
+ {static} getInstance(): Console
+ readString(String): String
+ readString(): String
+ readInt(String): int
+ readChar(String): char
+ writeln()
+ write(String)
+ writeln(String)
+ write(char)
- writeError(String)
}
usantatecla.utils.Console *-down-> BufferedReader

abstract class usantatecla.utils.WithConsoleView{
# console: Console
# WithConsoleView()
}
usantatecla.utils.WithConsoleView *-down-> usantatecla.utils.Console

class  usantatecla.utils.YesNoDialog{
- {static} AFIRMATIVE: char
- {static} NEGATIVE: char
- {static} QUESTION: String
- {static} MESSAGE: String
+ YesNoDialog()
+ read(String): boolean
- {static} isAfirmative(char): boolean
- {static} isNegative(char): boolean
}
usantatecla.utils.WithConsoleView <|-down- usantatecla.utils.YesNoDialog
@enduml
