@startuml mastermind
package usantatecla.mastermind {
class Mastermind {
	- board: Board 
	+ play()
	- playGame()
	- isResumedGame(): boolean 
	+ {static} main(String[])
}


class Board {
  - MAX_ATTEMPS: {static} int 
  - secretCombination: SecretCombination 
  - proposedCombinations: ProposedCombination[] 
  - results: Result[] 
  - attempts: int 
  ~ Board()
  + writeln()
  + add(ProposedCombination)
  + isFinished(): boolean 
  + isWinner(): boolean 
  - isLooser(): boolean 
}

abstract class Combination {
	~ colors: List<Color> 
	~ Combination ()
}

class SecretCombination {
	~ SecretCombination()
	~ getResult(ProposedCombination): Result 
	~ writeln()
}

class ProposedCombination {
	~write()
	~read()
	- checkError(String): Error 
	~ contains(Color, int): boolean 
	~ contains(Color): boolean 
}

class Result{
	+ WIDTH: {static} int 
	- blacks: int 
	- whites: int 
	~ Result(int, int)
	~ isWinner(): boolean 
	~ writeln()
}

enum Color {
	+ RED
	+ BLUE
	+ YELLOW
	+ GREEN
	+ ORANGE
	+ PURPLE
	+ NULL_COLOR
	- initial: String 
	- RESET_COLOR: {static} String 
	- Color()
	- Color(char)
	~ {static} getInitials(): String 
	~ {static} getInstance(char): Color
	~ {static} length(): int 
	~ {static} get(int): Color 
	~ write()
	~ isNull(): boolean 
}

enum Error {
	+ DUPLICATED
	+ WRONG_CHARACTERS
	+ WRONG_LENGTH
	+ NULL_ERROR
	- message: String
	- Error()
	- Error(String)
	~ writeln()
	+ isNull(): boolean 
}

enum Message {
	+ ATTEMPTS
	+ SECRET_COMBINATION
	+ RESUME
	+ RESULT
	+ PROPOSED_COMBINATION
	+ TITLE
	+ WINNER
	+ LOOSER
	- message: String 
	- Message(String)
	~ write()
	~ writeln()
	~ writeln(int)
	~ writeln(int, int)
}



Mastermind *-down-> Board : board
Mastermind .down.> ProposedCombination
Board *-down-> SecretCombination : secretCombination
Board o-down-> "0..10" ProposedCombination : proposedCombinations
Board o-down-> "0..10" Result : results

Combination *-down-> "4" Color : colors
Combination <|-down- SecretCombination
Combination <|-down- ProposedCombination
ProposedCombination .down.> Error


Mastermind .down.> Message
Board .down.> Message
ProposedCombination .down.> Message
Result .down.> Message

}

package usantatecla.utils {

class Console {


}

class YesNoDialog {

}

}

YesNoDialog .down.> Console
Board .down.> Console
Color .down.> Console
Color .down.> usantatecla.utils.ColorCode
Error .down.> Console
Message .down.> Console
ProposedCombination .down.> Console
SecretCombination .down.> Console
Mastermind .down.> YesNoDialog
@enduml

@startuml usantatecla.utils
class  usantatecla.utils.ClosedInterval{
- min: int
- max: int
+ ClosedInterval(int, int)
+ includes(int): boolean
}

class  usantatecla.utils.ColorCode{
+ {static} RED: ColorCode
+ {static} BLUE: ColorCode
+ {static} YELLOW: ColorCode
+ {static} GREEN: ColorCode
+ {static} ORANGE: ColorCode
+ {static} PURPLE: ColorCode
+ {static} RESET_COLOR: ColorCode
- color: String
~ ColorCode(String)
+ getColor(): String
+ {static} getColorByIndex(int): String
}

class  usantatecla.utils.Console{
+ {static} console: Console
- bufferedReader: BufferedReader
+ {static} getInstance(): Console
+ readString(String): String
+ readString(): String
+ readInt(String): int
+ readChar(String): char
+ writeln()
+ write(String)
+ writeln(String)
+ write(char)
- writeError(String)
}
usantatecla.utils.Console *-down-> java.io.BufferedReader

class  usantatecla.utils.WithConsoleView{
# console: Console
# WithConsoleView()
}
usantatecla.utils.WithConsoleView *-down-> usantatecla.utils.Console

class  usantatecla.utils.YesNoDialog{
- {static} AFIRMATIVE: char
- {static} NEGATIVE: char
- {static} QUESTION: String
- {static} MESSAGE: String
+ YesNoDialog()
+ read(String): boolean
+ read(): boolean
- {static} isAfirmative(char): boolean
- {static} isNegative(char): boolean
}
usantatecla.utils.WithConsoleView <|-down- usantatecla.utils.YesNoDialog
@enduml
