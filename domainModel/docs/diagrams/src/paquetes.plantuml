@startuml mastermind
package usantatecla.mastermind {
class Mastermind {
	- Board board
	+ void play()
	- void playGame()
	- boolean isResumedGame()
	+ {static} void main(String[] args)
}


class Board {
  - {static} {final} int MAX_ATTEMPS
  - SecretCombination secretCombination
  - ProposedCombination[] proposedCombinations
  - Result[] results 
  - int attempts
  Board()
  + void writeln()
  + void add(ProposedCombination)
  +  boolean isFinished()
  + boolean isWinner()
  - boolean isLooser()
}

abstract class Combination {
	~ List<Color> colors
	~ Combination ()
}

class SecretCombination {
	SecretCombination()
	Result getResult(ProposedCombination)
	void writeln()
}

class ProposedCombination {
	void write()
	void read()
	- Error checkError(String)
	boolean contains(Color, int)
	boolean contains(Color)
}

class Result{
	+ {static} {final} int WIDTH
	- int blacks
	- int whites
	Result(int, int)
	boolean isWinner()
	void writeln()
}

enum Color {
	RED
	BLUE
	YELLOW
	GREEN
	ORANGE
	PURPLE
	NULL_COLOR
	- String initial
	- {static} {final} String RESET_COLOR
	- Color()
	- Color(String)
	{static} String getInitials()
	{static} int length()
	{static} Color get(int)
	void write()
	boolean isNull()
}

enum Error {
	DUPLICATED
	WRONG_CHARACTERS
	WRONG_LENGTH
	NULL_ERROR
	- String message;
	- Error()
	- Error(String)
	void writeln()
	+ boolean isNull()
}

enum Message {
	ATTEMPTS
	SECRET_COMBINATION
	RESUME
	RESULT
	PROPOSED_COMBINATION
	TITLE
	WINNER
	LOOSER
	- String message;
	- Message(String)
	void write()
	void writeln()
	void writeln(int)
	void writeln(int, int)
}



Mastermind *-down-> Board : board
Mastermind .down.> ProposedCombination
Board *-down-> SecretCombination : secretCombination
Board o-down-> "0..10" ProposedCombination : proposedCombinations
Board o-down-> "0..10" Result : results

Combination *-down-> "4" Color : colors
Combination <|-down- SecretCombination
Combination <|-down- ProposedCombination
ProposedCombination .down.> Error


Mastermind .down.> Message
Board .down.> Message
ProposedCombination .down.> Message
Result .down.> Message

}

package usantatecla.utils {

class Console {

	- {static} Console console
	+ {static} Console getInstance()
	- BufferedReader bufferedReader
	+ String readString(String)
	+ String readString()
	+ int readInt(String)
	+ char readChar(String)
	+ void writeln()
	+ void write(String)
	+ void write(int)
	+ void writeln(String)
	+ void writeln(int)
	+ void write(char)
	+ void writeError(String)
}

class YesNoDialog {

	- {static} final char AFFIRMATIVE
	- {static} final char NEGATIVE
	- {static} final String SUFFIX
	- {static} final String MESSAGE
	- char answer;
	+ boolean read(String)
	- boolean isAfirmative()
	- char getAnswer()
	- boolean isNegative()

}

}

YesNoDialog .down.> Console
Board .down.> Console
Color .down.> Console
Error .down.> Console
Message .down.> Console
ProposedCombination .down.> Console
SecretCombination .down.> Console
Mastermind .down.> YesNoDialog
@enduml

@startuml mastermind.utils
class  mastermind.utils.ClosedInterval{
- min: int
- max: int
+ ClosedInterval(int, int)
+ includes(int): boolean
}

class  mastermind.utils.Console{
- bufferedReader: BufferedReader
+ Console()
+ write(char): void
+ write(String): void
+ readInt(String): int
+ readChar(String): char
- writeError(String): void
+ writeln(String): void
+ writeln(int): void
+ writeln(): void
+ readString(String): String
}
mastermind.utils.Console *-down-> java.io.BufferedReader

class  mastermind.utils.WithConsoleView{
# console: Console
# WithConsoleView()
}
mastermind.utils.WithConsoleView *-down-> mastermind.utils.Console

class  mastermind.utils.YesNoDialog{
- {static} AFIRMATIVE: char
- {static} NEGATIVE: char
- {static} QUESTION: String
- {static} MESSAGE: String
+ YesNoDialog()
+ read(String): boolean
- {static} isAfirmative(char): boolean
- {static} isNegative(char): boolean
}
mastermind.utils.WithConsoleView <|-down- mastermind.utils.YesNoDialog
@enduml
